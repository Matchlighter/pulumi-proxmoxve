# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

import types

__config__ = pulumi.Config('proxmoxve')


class _ExportableConfig(types.ModuleType):
    @property
    def pm_api_token_id(self) -> Optional[str]:
        """
        API TokenID e.g. root@pam!mytesttoken
        """
        return __config__.get('pmApiTokenId')

    @property
    def pm_api_token_secret(self) -> Optional[str]:
        """
        The secret uuid corresponding to a TokenID
        """
        return __config__.get('pmApiTokenSecret')

    @property
    def pm_api_url(self) -> Optional[str]:
        """
        https://host.fqdn:8006/api2/json
        """
        return __config__.get('pmApiUrl')

    @property
    def pm_dangerously_ignore_unknown_attributes(self) -> Optional[bool]:
        """
        By default this provider will exit if an unknown attribute is found. This is to prevent the accidential destruction of
        VMs or Data when something in the proxmox API has changed/updated and is not confirmed to work with this provider. Set
        this to true at your own risk. It may allow you to proceed in cases when the provider refuses to work, but be aware of
        the danger in doing so.
        """
        return __config__.get_bool('pmDangerouslyIgnoreUnknownAttributes')

    @property
    def pm_log_enable(self) -> Optional[bool]:
        """
        Enable provider logging to get proxmox API logs
        """
        return __config__.get_bool('pmLogEnable')

    @property
    def pm_log_file(self) -> Optional[str]:
        """
        Write logs to this specific file
        """
        return __config__.get('pmLogFile')

    @property
    def pm_log_levels(self) -> Optional[str]:
        """
        Configure the logging level to display; trace, debug, info, warn, etc
        """
        return __config__.get('pmLogLevels')

    @property
    def pm_otp(self) -> Optional[str]:
        """
        OTP 2FA code (if required)
        """
        return __config__.get('pmOtp')

    @property
    def pm_parallel(self) -> Optional[int]:
        return __config__.get_int('pmParallel')

    @property
    def pm_password(self) -> Optional[str]:
        """
        Password to authenticate into proxmox
        """
        return __config__.get('pmPassword')

    @property
    def pm_timeout(self) -> Optional[int]:
        return __config__.get_int('pmTimeout')

    @property
    def pm_tls_insecure(self) -> Optional[bool]:
        """
        By default, every TLS connection is verified to be secure. This option allows terraform to proceed and operate on
        servers considered insecure. For example if you're connecting to a remote host and you do not have the CA cert that
        issued the proxmox api url's certificate.
        """
        return __config__.get_bool('pmTlsInsecure')

    @property
    def pm_user(self) -> Optional[str]:
        """
        Username e.g. myuser or myuser@pam
        """
        return __config__.get('pmUser')

