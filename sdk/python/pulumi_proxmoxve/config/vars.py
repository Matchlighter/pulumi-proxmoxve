# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from .. import _utilities, _tables

__all__ = [
    'pm_api_token_id',
    'pm_api_token_secret',
    'pm_api_url',
    'pm_dangerously_ignore_unknown_attributes',
    'pm_log_enable',
    'pm_log_file',
    'pm_log_levels',
    'pm_otp',
    'pm_parallel',
    'pm_password',
    'pm_timeout',
    'pm_tls_insecure',
    'pm_user',
]

__config__ = pulumi.Config('proxmoxve')

pm_api_token_id = __config__.get('pmApiTokenId')
"""
API TokenID e.g. root@pam!mytesttoken
"""

pm_api_token_secret = __config__.get('pmApiTokenSecret')
"""
The secret uuid corresponding to a TokenID
"""

pm_api_url = __config__.get('pmApiUrl')
"""
https://host.fqdn:8006/api2/json
"""

pm_dangerously_ignore_unknown_attributes = __config__.get('pmDangerouslyIgnoreUnknownAttributes')
"""
By default this provider will exit if an unknown attribute is found. This is to prevent the accidential destruction of
VMs or Data when something in the proxmox API has changed/updated and is not confirmed to work with this provider. Set
this to true at your own risk. It may allow you to proceed in cases when the provider refuses to work, but be aware of
the danger in doing so.
"""

pm_log_enable = __config__.get('pmLogEnable')
"""
Enable provider logging to get proxmox API logs
"""

pm_log_file = __config__.get('pmLogFile')
"""
Write logs to this specific file
"""

pm_log_levels = __config__.get('pmLogLevels')
"""
Configure the logging level to display; trace, debug, info, warn, etc
"""

pm_otp = __config__.get('pmOtp')
"""
OTP 2FA code (if required)
"""

pm_parallel = __config__.get('pmParallel')

pm_password = __config__.get('pmPassword')
"""
Password to authenticate into proxmox
"""

pm_timeout = __config__.get('pmTimeout')

pm_tls_insecure = __config__.get('pmTlsInsecure')
"""
By default, every TLS connection is verified to be secure. This option allows terraform to proceed and operate on
servers considered insecure. For example if you're connecting to a remote host and you do not have the CA cert that
issued the proxmox api url's certificate.
"""

pm_user = __config__.get('pmUser')
"""
Username e.g. myuser or myuser@pam
"""

