// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi/config"
)

// https://host.fqdn:8006/api2/json
func GetPmApiUrl(ctx *pulumi.Context) string {
	return config.Get(ctx, "proxmoxve:pmApiUrl")
}

// By default this provider will exit if an unknown attribute is found. This is to prevent the accidential destruction of
// VMs or Data when something in the proxmox API has changed/updated and is not confirmed to work with this provider. Set
// this to true at your own risk. It may allow you to proceed in cases when the provider refuses to work, but be aware of
// the danger in doing so.
func GetPmDangerouslyIgnoreUnknownAttributes(ctx *pulumi.Context) bool {
	return config.GetBool(ctx, "proxmoxve:pmDangerouslyIgnoreUnknownAttributes")
}
func GetPmLogEnable(ctx *pulumi.Context) bool {
	return config.GetBool(ctx, "proxmoxve:pmLogEnable")
}
func GetPmLogFile(ctx *pulumi.Context) string {
	return config.Get(ctx, "proxmoxve:pmLogFile")
}
func GetPmLogLevels(ctx *pulumi.Context) string {
	return config.Get(ctx, "proxmoxve:pmLogLevels")
}

// OTP 2FA code (if required)
func GetPmOtp(ctx *pulumi.Context) string {
	return config.Get(ctx, "proxmoxve:pmOtp")
}
func GetPmParallel(ctx *pulumi.Context) int {
	return config.GetInt(ctx, "proxmoxve:pmParallel")
}

// secret
func GetPmPassword(ctx *pulumi.Context) string {
	return config.Get(ctx, "proxmoxve:pmPassword")
}
func GetPmTimeout(ctx *pulumi.Context) int {
	return config.GetInt(ctx, "proxmoxve:pmTimeout")
}
func GetPmTlsInsecure(ctx *pulumi.Context) bool {
	return config.GetBool(ctx, "proxmoxve:pmTlsInsecure")
}

// username, maywith with @pam
func GetPmUser(ctx *pulumi.Context) string {
	return config.Get(ctx, "proxmoxve:pmUser")
}
