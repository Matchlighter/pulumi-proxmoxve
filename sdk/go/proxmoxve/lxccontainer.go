// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package proxmoxve

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type LXCContainer struct {
	pulumi.CustomResourceState

	Arch               pulumi.StringPtrOutput            `pulumi:"arch"`
	Bwlimit            pulumi.IntPtrOutput               `pulumi:"bwlimit"`
	Cmode              pulumi.StringPtrOutput            `pulumi:"cmode"`
	Console            pulumi.BoolPtrOutput              `pulumi:"console"`
	Cores              pulumi.IntPtrOutput               `pulumi:"cores"`
	Cpulimit           pulumi.IntPtrOutput               `pulumi:"cpulimit"`
	Cpuunits           pulumi.IntPtrOutput               `pulumi:"cpuunits"`
	Description        pulumi.StringPtrOutput            `pulumi:"description"`
	Features           LXCContainerFeaturesPtrOutput     `pulumi:"features"`
	Force              pulumi.BoolPtrOutput              `pulumi:"force"`
	Hookscript         pulumi.StringPtrOutput            `pulumi:"hookscript"`
	Hostname           pulumi.StringPtrOutput            `pulumi:"hostname"`
	IgnoreUnpackErrors pulumi.BoolPtrOutput              `pulumi:"ignoreUnpackErrors"`
	Lock               pulumi.StringPtrOutput            `pulumi:"lock"`
	Memory             pulumi.IntPtrOutput               `pulumi:"memory"`
	Mountpoints        LXCContainerMountpointArrayOutput `pulumi:"mountpoints"`
	Nameserver         pulumi.StringPtrOutput            `pulumi:"nameserver"`
	Networks           LXCContainerNetworkArrayOutput    `pulumi:"networks"`
	Onboot             pulumi.BoolPtrOutput              `pulumi:"onboot"`
	Ostemplate         pulumi.StringPtrOutput            `pulumi:"ostemplate"`
	Ostype             pulumi.StringOutput               `pulumi:"ostype"`
	Password           pulumi.StringPtrOutput            `pulumi:"password"`
	Pool               pulumi.StringPtrOutput            `pulumi:"pool"`
	Protection         pulumi.BoolPtrOutput              `pulumi:"protection"`
	Restore            pulumi.BoolPtrOutput              `pulumi:"restore"`
	Rootfs             LXCContainerRootfsPtrOutput       `pulumi:"rootfs"`
	Searchdomain       pulumi.StringPtrOutput            `pulumi:"searchdomain"`
	SshPublicKeys      pulumi.StringPtrOutput            `pulumi:"sshPublicKeys"`
	Start              pulumi.BoolPtrOutput              `pulumi:"start"`
	Startup            pulumi.StringPtrOutput            `pulumi:"startup"`
	Swap               pulumi.IntPtrOutput               `pulumi:"swap"`
	Tags               pulumi.StringPtrOutput            `pulumi:"tags"`
	TargetNode         pulumi.StringOutput               `pulumi:"targetNode"`
	Template           pulumi.BoolPtrOutput              `pulumi:"template"`
	Tty                pulumi.IntPtrOutput               `pulumi:"tty"`
	Unique             pulumi.BoolPtrOutput              `pulumi:"unique"`
	Unprivileged       pulumi.BoolPtrOutput              `pulumi:"unprivileged"`
	Unuseds            pulumi.StringArrayOutput          `pulumi:"unuseds"`
	Vmid               pulumi.IntPtrOutput               `pulumi:"vmid"`
}

// NewLXCContainer registers a new resource with the given unique name, arguments, and options.
func NewLXCContainer(ctx *pulumi.Context,
	name string, args *LXCContainerArgs, opts ...pulumi.ResourceOption) (*LXCContainer, error) {
	if args == nil || args.TargetNode == nil {
		return nil, errors.New("missing required argument 'TargetNode'")
	}
	if args == nil {
		args = &LXCContainerArgs{}
	}
	var resource LXCContainer
	err := ctx.RegisterResource("proxmoxve:index/lXCContainer:LXCContainer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLXCContainer gets an existing LXCContainer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLXCContainer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LXCContainerState, opts ...pulumi.ResourceOption) (*LXCContainer, error) {
	var resource LXCContainer
	err := ctx.ReadResource("proxmoxve:index/lXCContainer:LXCContainer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LXCContainer resources.
type lxccontainerState struct {
	Arch               *string                  `pulumi:"arch"`
	Bwlimit            *int                     `pulumi:"bwlimit"`
	Cmode              *string                  `pulumi:"cmode"`
	Console            *bool                    `pulumi:"console"`
	Cores              *int                     `pulumi:"cores"`
	Cpulimit           *int                     `pulumi:"cpulimit"`
	Cpuunits           *int                     `pulumi:"cpuunits"`
	Description        *string                  `pulumi:"description"`
	Features           *LXCContainerFeatures    `pulumi:"features"`
	Force              *bool                    `pulumi:"force"`
	Hookscript         *string                  `pulumi:"hookscript"`
	Hostname           *string                  `pulumi:"hostname"`
	IgnoreUnpackErrors *bool                    `pulumi:"ignoreUnpackErrors"`
	Lock               *string                  `pulumi:"lock"`
	Memory             *int                     `pulumi:"memory"`
	Mountpoints        []LXCContainerMountpoint `pulumi:"mountpoints"`
	Nameserver         *string                  `pulumi:"nameserver"`
	Networks           []LXCContainerNetwork    `pulumi:"networks"`
	Onboot             *bool                    `pulumi:"onboot"`
	Ostemplate         *string                  `pulumi:"ostemplate"`
	Ostype             *string                  `pulumi:"ostype"`
	Password           *string                  `pulumi:"password"`
	Pool               *string                  `pulumi:"pool"`
	Protection         *bool                    `pulumi:"protection"`
	Restore            *bool                    `pulumi:"restore"`
	Rootfs             *LXCContainerRootfs      `pulumi:"rootfs"`
	Searchdomain       *string                  `pulumi:"searchdomain"`
	SshPublicKeys      *string                  `pulumi:"sshPublicKeys"`
	Start              *bool                    `pulumi:"start"`
	Startup            *string                  `pulumi:"startup"`
	Swap               *int                     `pulumi:"swap"`
	Tags               *string                  `pulumi:"tags"`
	TargetNode         *string                  `pulumi:"targetNode"`
	Template           *bool                    `pulumi:"template"`
	Tty                *int                     `pulumi:"tty"`
	Unique             *bool                    `pulumi:"unique"`
	Unprivileged       *bool                    `pulumi:"unprivileged"`
	Unuseds            []string                 `pulumi:"unuseds"`
	Vmid               *int                     `pulumi:"vmid"`
}

type LXCContainerState struct {
	Arch               pulumi.StringPtrInput
	Bwlimit            pulumi.IntPtrInput
	Cmode              pulumi.StringPtrInput
	Console            pulumi.BoolPtrInput
	Cores              pulumi.IntPtrInput
	Cpulimit           pulumi.IntPtrInput
	Cpuunits           pulumi.IntPtrInput
	Description        pulumi.StringPtrInput
	Features           LXCContainerFeaturesPtrInput
	Force              pulumi.BoolPtrInput
	Hookscript         pulumi.StringPtrInput
	Hostname           pulumi.StringPtrInput
	IgnoreUnpackErrors pulumi.BoolPtrInput
	Lock               pulumi.StringPtrInput
	Memory             pulumi.IntPtrInput
	Mountpoints        LXCContainerMountpointArrayInput
	Nameserver         pulumi.StringPtrInput
	Networks           LXCContainerNetworkArrayInput
	Onboot             pulumi.BoolPtrInput
	Ostemplate         pulumi.StringPtrInput
	Ostype             pulumi.StringPtrInput
	Password           pulumi.StringPtrInput
	Pool               pulumi.StringPtrInput
	Protection         pulumi.BoolPtrInput
	Restore            pulumi.BoolPtrInput
	Rootfs             LXCContainerRootfsPtrInput
	Searchdomain       pulumi.StringPtrInput
	SshPublicKeys      pulumi.StringPtrInput
	Start              pulumi.BoolPtrInput
	Startup            pulumi.StringPtrInput
	Swap               pulumi.IntPtrInput
	Tags               pulumi.StringPtrInput
	TargetNode         pulumi.StringPtrInput
	Template           pulumi.BoolPtrInput
	Tty                pulumi.IntPtrInput
	Unique             pulumi.BoolPtrInput
	Unprivileged       pulumi.BoolPtrInput
	Unuseds            pulumi.StringArrayInput
	Vmid               pulumi.IntPtrInput
}

func (LXCContainerState) ElementType() reflect.Type {
	return reflect.TypeOf((*lxccontainerState)(nil)).Elem()
}

type lxccontainerArgs struct {
	Arch               *string                  `pulumi:"arch"`
	Bwlimit            *int                     `pulumi:"bwlimit"`
	Cmode              *string                  `pulumi:"cmode"`
	Console            *bool                    `pulumi:"console"`
	Cores              *int                     `pulumi:"cores"`
	Cpulimit           *int                     `pulumi:"cpulimit"`
	Cpuunits           *int                     `pulumi:"cpuunits"`
	Description        *string                  `pulumi:"description"`
	Features           *LXCContainerFeatures    `pulumi:"features"`
	Force              *bool                    `pulumi:"force"`
	Hookscript         *string                  `pulumi:"hookscript"`
	Hostname           *string                  `pulumi:"hostname"`
	IgnoreUnpackErrors *bool                    `pulumi:"ignoreUnpackErrors"`
	Lock               *string                  `pulumi:"lock"`
	Memory             *int                     `pulumi:"memory"`
	Mountpoints        []LXCContainerMountpoint `pulumi:"mountpoints"`
	Nameserver         *string                  `pulumi:"nameserver"`
	Networks           []LXCContainerNetwork    `pulumi:"networks"`
	Onboot             *bool                    `pulumi:"onboot"`
	Ostemplate         *string                  `pulumi:"ostemplate"`
	Ostype             *string                  `pulumi:"ostype"`
	Password           *string                  `pulumi:"password"`
	Pool               *string                  `pulumi:"pool"`
	Protection         *bool                    `pulumi:"protection"`
	Restore            *bool                    `pulumi:"restore"`
	Rootfs             *LXCContainerRootfs      `pulumi:"rootfs"`
	Searchdomain       *string                  `pulumi:"searchdomain"`
	SshPublicKeys      *string                  `pulumi:"sshPublicKeys"`
	Start              *bool                    `pulumi:"start"`
	Startup            *string                  `pulumi:"startup"`
	Swap               *int                     `pulumi:"swap"`
	Tags               *string                  `pulumi:"tags"`
	TargetNode         string                   `pulumi:"targetNode"`
	Template           *bool                    `pulumi:"template"`
	Tty                *int                     `pulumi:"tty"`
	Unique             *bool                    `pulumi:"unique"`
	Unprivileged       *bool                    `pulumi:"unprivileged"`
	Unuseds            []string                 `pulumi:"unuseds"`
	Vmid               *int                     `pulumi:"vmid"`
}

// The set of arguments for constructing a LXCContainer resource.
type LXCContainerArgs struct {
	Arch               pulumi.StringPtrInput
	Bwlimit            pulumi.IntPtrInput
	Cmode              pulumi.StringPtrInput
	Console            pulumi.BoolPtrInput
	Cores              pulumi.IntPtrInput
	Cpulimit           pulumi.IntPtrInput
	Cpuunits           pulumi.IntPtrInput
	Description        pulumi.StringPtrInput
	Features           LXCContainerFeaturesPtrInput
	Force              pulumi.BoolPtrInput
	Hookscript         pulumi.StringPtrInput
	Hostname           pulumi.StringPtrInput
	IgnoreUnpackErrors pulumi.BoolPtrInput
	Lock               pulumi.StringPtrInput
	Memory             pulumi.IntPtrInput
	Mountpoints        LXCContainerMountpointArrayInput
	Nameserver         pulumi.StringPtrInput
	Networks           LXCContainerNetworkArrayInput
	Onboot             pulumi.BoolPtrInput
	Ostemplate         pulumi.StringPtrInput
	Ostype             pulumi.StringPtrInput
	Password           pulumi.StringPtrInput
	Pool               pulumi.StringPtrInput
	Protection         pulumi.BoolPtrInput
	Restore            pulumi.BoolPtrInput
	Rootfs             LXCContainerRootfsPtrInput
	Searchdomain       pulumi.StringPtrInput
	SshPublicKeys      pulumi.StringPtrInput
	Start              pulumi.BoolPtrInput
	Startup            pulumi.StringPtrInput
	Swap               pulumi.IntPtrInput
	Tags               pulumi.StringPtrInput
	TargetNode         pulumi.StringInput
	Template           pulumi.BoolPtrInput
	Tty                pulumi.IntPtrInput
	Unique             pulumi.BoolPtrInput
	Unprivileged       pulumi.BoolPtrInput
	Unuseds            pulumi.StringArrayInput
	Vmid               pulumi.IntPtrInput
}

func (LXCContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lxccontainerArgs)(nil)).Elem()
}
